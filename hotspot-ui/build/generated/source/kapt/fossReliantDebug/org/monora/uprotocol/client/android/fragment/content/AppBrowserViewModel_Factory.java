// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.fragment.content;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.data.MediaRepository;
import org.monora.uprotocol.client.android.data.SelectionRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppBrowserViewModel_Factory implements Factory<AppBrowserViewModel> {
  private final Provider<MediaRepository> mediaRepositoryProvider;

  private final Provider<SelectionRepository> selectionRepositoryProvider;

  public AppBrowserViewModel_Factory(Provider<MediaRepository> mediaRepositoryProvider,
      Provider<SelectionRepository> selectionRepositoryProvider) {
    this.mediaRepositoryProvider = mediaRepositoryProvider;
    this.selectionRepositoryProvider = selectionRepositoryProvider;
  }

  @Override
  public AppBrowserViewModel get() {
    return newInstance(mediaRepositoryProvider.get(), selectionRepositoryProvider.get());
  }

  public static AppBrowserViewModel_Factory create(
      Provider<MediaRepository> mediaRepositoryProvider,
      Provider<SelectionRepository> selectionRepositoryProvider) {
    return new AppBrowserViewModel_Factory(mediaRepositoryProvider, selectionRepositoryProvider);
  }

  public static AppBrowserViewModel newInstance(MediaRepository mediaRepository,
      SelectionRepository selectionRepository) {
    return new AppBrowserViewModel(mediaRepository, selectionRepository);
  }
}
