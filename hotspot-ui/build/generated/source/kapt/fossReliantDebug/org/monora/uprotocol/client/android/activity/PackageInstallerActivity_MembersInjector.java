// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.activity;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.app.Activity_MembersInjector;
import org.monora.uprotocol.client.android.backend.Backend;
import org.monora.uprotocol.client.android.data.SharedTextRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PackageInstallerActivity_MembersInjector implements MembersInjector<PackageInstallerActivity> {
  private final Provider<Backend> backendProvider;

  private final Provider<SharedTextRepository> sharedTextRepositoryProvider;

  private final Provider<PackageInstallerViewModel.Factory> factoryProvider;

  public PackageInstallerActivity_MembersInjector(Provider<Backend> backendProvider,
      Provider<SharedTextRepository> sharedTextRepositoryProvider,
      Provider<PackageInstallerViewModel.Factory> factoryProvider) {
    this.backendProvider = backendProvider;
    this.sharedTextRepositoryProvider = sharedTextRepositoryProvider;
    this.factoryProvider = factoryProvider;
  }

  public static MembersInjector<PackageInstallerActivity> create(Provider<Backend> backendProvider,
      Provider<SharedTextRepository> sharedTextRepositoryProvider,
      Provider<PackageInstallerViewModel.Factory> factoryProvider) {
    return new PackageInstallerActivity_MembersInjector(backendProvider, sharedTextRepositoryProvider, factoryProvider);
  }

  @Override
  public void injectMembers(PackageInstallerActivity instance) {
    Activity_MembersInjector.injectBackend(instance, backendProvider.get());
    Activity_MembersInjector.injectSharedTextRepository(instance, sharedTextRepositoryProvider.get());
    injectFactory(instance, factoryProvider.get());
  }

  @InjectedFieldSignature("org.monora.uprotocol.client.android.activity.PackageInstallerActivity.factory")
  public static void injectFactory(PackageInstallerActivity instance,
      PackageInstallerViewModel.Factory factory) {
    instance.factory = factory;
  }
}
