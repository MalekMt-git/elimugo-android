// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.fragment;

import dagger.internal.DaggerGenerated;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.data.ClientRepository;
import org.monora.uprotocol.client.android.database.model.UClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ClientDetailsViewModel_Factory {
  private final Provider<ClientRepository> clientRepositoryProvider;

  public ClientDetailsViewModel_Factory(Provider<ClientRepository> clientRepositoryProvider) {
    this.clientRepositoryProvider = clientRepositoryProvider;
  }

  public ClientDetailsViewModel get(UClient client) {
    return newInstance(clientRepositoryProvider.get(), client);
  }

  public static ClientDetailsViewModel_Factory create(
      Provider<ClientRepository> clientRepositoryProvider) {
    return new ClientDetailsViewModel_Factory(clientRepositoryProvider);
  }

  public static ClientDetailsViewModel newInstance(ClientRepository clientRepository,
      UClient client) {
    return new ClientDetailsViewModel(clientRepository, client);
  }
}
