// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.fragment;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.data.WebDataRepository;
import org.monora.uprotocol.client.android.database.model.WebTransfer;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WebTransferDetailsViewModel_Factory {
  private final Provider<Context> contextProvider;

  private final Provider<WebDataRepository> webDataRepositoryProvider;

  public WebTransferDetailsViewModel_Factory(Provider<Context> contextProvider,
      Provider<WebDataRepository> webDataRepositoryProvider) {
    this.contextProvider = contextProvider;
    this.webDataRepositoryProvider = webDataRepositoryProvider;
  }

  public WebTransferDetailsViewModel get(WebTransfer transfer) {
    return newInstance(contextProvider.get(), webDataRepositoryProvider.get(), transfer);
  }

  public static WebTransferDetailsViewModel_Factory create(Provider<Context> contextProvider,
      Provider<WebDataRepository> webDataRepositoryProvider) {
    return new WebTransferDetailsViewModel_Factory(contextProvider, webDataRepositoryProvider);
  }

  public static WebTransferDetailsViewModel newInstance(Context context,
      WebDataRepository webDataRepository, WebTransfer transfer) {
    return new WebTransferDetailsViewModel(context, webDataRepository, transfer);
  }
}
