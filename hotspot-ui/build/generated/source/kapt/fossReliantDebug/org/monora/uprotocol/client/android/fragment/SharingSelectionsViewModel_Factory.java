// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.fragment;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.data.SelectionRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SharingSelectionsViewModel_Factory implements Factory<SharingSelectionsViewModel> {
  private final Provider<SelectionRepository> selectionRepositoryProvider;

  public SharingSelectionsViewModel_Factory(
      Provider<SelectionRepository> selectionRepositoryProvider) {
    this.selectionRepositoryProvider = selectionRepositoryProvider;
  }

  @Override
  public SharingSelectionsViewModel get() {
    return newInstance(selectionRepositoryProvider.get());
  }

  public static SharingSelectionsViewModel_Factory create(
      Provider<SelectionRepository> selectionRepositoryProvider) {
    return new SharingSelectionsViewModel_Factory(selectionRepositoryProvider);
  }

  public static SharingSelectionsViewModel newInstance(SelectionRepository selectionRepository) {
    return new SharingSelectionsViewModel(selectionRepository);
  }
}
