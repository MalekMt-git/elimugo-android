// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.data;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.database.ClientAddressDao;
import org.monora.uprotocol.client.android.database.ClientDao;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ClientRepository_Factory implements Factory<ClientRepository> {
  private final Provider<ClientDao> clientDaoProvider;

  private final Provider<ClientAddressDao> clientAddressDaoProvider;

  public ClientRepository_Factory(Provider<ClientDao> clientDaoProvider,
      Provider<ClientAddressDao> clientAddressDaoProvider) {
    this.clientDaoProvider = clientDaoProvider;
    this.clientAddressDaoProvider = clientAddressDaoProvider;
  }

  @Override
  public ClientRepository get() {
    return newInstance(clientDaoProvider.get(), clientAddressDaoProvider.get());
  }

  public static ClientRepository_Factory create(Provider<ClientDao> clientDaoProvider,
      Provider<ClientAddressDao> clientAddressDaoProvider) {
    return new ClientRepository_Factory(clientDaoProvider, clientAddressDaoProvider);
  }

  public static ClientRepository newInstance(ClientDao clientDao,
      ClientAddressDao clientAddressDao) {
    return new ClientRepository(clientDao, clientAddressDao);
  }
}
