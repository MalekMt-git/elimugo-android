// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.fragment.content.transfer;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.data.SelectionRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PrepareIndexViewModel_Factory implements Factory<PrepareIndexViewModel> {
  private final Provider<Context> contextProvider;

  private final Provider<SelectionRepository> selectionRepositoryProvider;

  public PrepareIndexViewModel_Factory(Provider<Context> contextProvider,
      Provider<SelectionRepository> selectionRepositoryProvider) {
    this.contextProvider = contextProvider;
    this.selectionRepositoryProvider = selectionRepositoryProvider;
  }

  @Override
  public PrepareIndexViewModel get() {
    return newInstance(contextProvider.get(), selectionRepositoryProvider.get());
  }

  public static PrepareIndexViewModel_Factory create(Provider<Context> contextProvider,
      Provider<SelectionRepository> selectionRepositoryProvider) {
    return new PrepareIndexViewModel_Factory(contextProvider, selectionRepositoryProvider);
  }

  public static PrepareIndexViewModel newInstance(Context context,
      SelectionRepository selectionRepository) {
    return new PrepareIndexViewModel(context, selectionRepository);
  }
}
