// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.viewmodel;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.data.SharedTextRepository;
import org.monora.uprotocol.client.android.data.UserDataRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SharedTextsViewModel_Factory implements Factory<SharedTextsViewModel> {
  private final Provider<Context> contextProvider;

  private final Provider<UserDataRepository> userDataRepositoryProvider;

  private final Provider<SharedTextRepository> sharedTextRepositoryProvider;

  public SharedTextsViewModel_Factory(Provider<Context> contextProvider,
      Provider<UserDataRepository> userDataRepositoryProvider,
      Provider<SharedTextRepository> sharedTextRepositoryProvider) {
    this.contextProvider = contextProvider;
    this.userDataRepositoryProvider = userDataRepositoryProvider;
    this.sharedTextRepositoryProvider = sharedTextRepositoryProvider;
  }

  @Override
  public SharedTextsViewModel get() {
    return newInstance(contextProvider.get(), userDataRepositoryProvider.get(), sharedTextRepositoryProvider.get());
  }

  public static SharedTextsViewModel_Factory create(Provider<Context> contextProvider,
      Provider<UserDataRepository> userDataRepositoryProvider,
      Provider<SharedTextRepository> sharedTextRepositoryProvider) {
    return new SharedTextsViewModel_Factory(contextProvider, userDataRepositoryProvider, sharedTextRepositoryProvider);
  }

  public static SharedTextsViewModel newInstance(Context context,
      UserDataRepository userDataRepository, SharedTextRepository sharedTextRepository) {
    return new SharedTextsViewModel(context, userDataRepository, sharedTextRepository);
  }
}
