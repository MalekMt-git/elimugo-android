// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.fragment;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.core.TransportSeat;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReceiverViewModel_Factory implements Factory<ReceiverViewModel> {
  private final Provider<TransportSeat> transportSeatProvider;

  public ReceiverViewModel_Factory(Provider<TransportSeat> transportSeatProvider) {
    this.transportSeatProvider = transportSeatProvider;
  }

  @Override
  public ReceiverViewModel get() {
    return newInstance(transportSeatProvider.get());
  }

  public static ReceiverViewModel_Factory create(Provider<TransportSeat> transportSeatProvider) {
    return new ReceiverViewModel_Factory(transportSeatProvider);
  }

  public static ReceiverViewModel newInstance(TransportSeat transportSeat) {
    return new ReceiverViewModel(transportSeat);
  }
}
