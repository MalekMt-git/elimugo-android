// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.di;

import android.content.Context;
import com.yanzhenjie.andserver.Server;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WebServerModule_ProvidesWebServerFactory implements Factory<Server> {
  private final Provider<Context> contextProvider;

  public WebServerModule_ProvidesWebServerFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public Server get() {
    return providesWebServer(contextProvider.get());
  }

  public static WebServerModule_ProvidesWebServerFactory create(Provider<Context> contextProvider) {
    return new WebServerModule_ProvidesWebServerFactory(contextProvider);
  }

  public static Server providesWebServer(Context context) {
    return Preconditions.checkNotNullFromProvides(WebServerModule.INSTANCE.providesWebServer(context));
  }
}
