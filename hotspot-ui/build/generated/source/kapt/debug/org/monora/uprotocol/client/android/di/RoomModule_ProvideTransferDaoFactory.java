// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.database.AppDatabase;
import org.monora.uprotocol.client.android.database.TransferDao;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvideTransferDaoFactory implements Factory<TransferDao> {
  private final Provider<AppDatabase> appDatabaseProvider;

  public RoomModule_ProvideTransferDaoFactory(Provider<AppDatabase> appDatabaseProvider) {
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public TransferDao get() {
    return provideTransferDao(appDatabaseProvider.get());
  }

  public static RoomModule_ProvideTransferDaoFactory create(
      Provider<AppDatabase> appDatabaseProvider) {
    return new RoomModule_ProvideTransferDaoFactory(appDatabaseProvider);
  }

  public static TransferDao provideTransferDao(AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(RoomModule.INSTANCE.provideTransferDao(appDatabase));
  }
}
