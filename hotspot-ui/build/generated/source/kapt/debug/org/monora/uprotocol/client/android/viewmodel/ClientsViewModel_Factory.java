// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.viewmodel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.data.ClientRepository;
import org.monora.uprotocol.client.android.data.OnlineClientRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ClientsViewModel_Factory implements Factory<ClientsViewModel> {
  private final Provider<ClientRepository> clientRepositoryProvider;

  private final Provider<OnlineClientRepository> onlineClientRepositoryProvider;

  public ClientsViewModel_Factory(Provider<ClientRepository> clientRepositoryProvider,
      Provider<OnlineClientRepository> onlineClientRepositoryProvider) {
    this.clientRepositoryProvider = clientRepositoryProvider;
    this.onlineClientRepositoryProvider = onlineClientRepositoryProvider;
  }

  @Override
  public ClientsViewModel get() {
    return newInstance(clientRepositoryProvider.get(), onlineClientRepositoryProvider.get());
  }

  public static ClientsViewModel_Factory create(Provider<ClientRepository> clientRepositoryProvider,
      Provider<OnlineClientRepository> onlineClientRepositoryProvider) {
    return new ClientsViewModel_Factory(clientRepositoryProvider, onlineClientRepositoryProvider);
  }

  public static ClientsViewModel newInstance(ClientRepository clientRepository,
      OnlineClientRepository onlineClientRepository) {
    return new ClientsViewModel(clientRepository, onlineClientRepository);
  }
}
