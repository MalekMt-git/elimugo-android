// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.data;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.database.TransferDao;
import org.monora.uprotocol.client.android.database.TransferItemDao;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TransferRepository_Factory implements Factory<TransferRepository> {
  private final Provider<Context> contextProvider;

  private final Provider<FileRepository> fileRepositoryProvider;

  private final Provider<TransferDao> transferDaoProvider;

  private final Provider<TransferItemDao> transferItemDaoProvider;

  public TransferRepository_Factory(Provider<Context> contextProvider,
      Provider<FileRepository> fileRepositoryProvider, Provider<TransferDao> transferDaoProvider,
      Provider<TransferItemDao> transferItemDaoProvider) {
    this.contextProvider = contextProvider;
    this.fileRepositoryProvider = fileRepositoryProvider;
    this.transferDaoProvider = transferDaoProvider;
    this.transferItemDaoProvider = transferItemDaoProvider;
  }

  @Override
  public TransferRepository get() {
    return newInstance(contextProvider.get(), fileRepositoryProvider.get(), transferDaoProvider.get(), transferItemDaoProvider.get());
  }

  public static TransferRepository_Factory create(Provider<Context> contextProvider,
      Provider<FileRepository> fileRepositoryProvider, Provider<TransferDao> transferDaoProvider,
      Provider<TransferItemDao> transferItemDaoProvider) {
    return new TransferRepository_Factory(contextProvider, fileRepositoryProvider, transferDaoProvider, transferItemDaoProvider);
  }

  public static TransferRepository newInstance(Context context, FileRepository fileRepository,
      TransferDao transferDao, TransferItemDao transferItemDao) {
    return new TransferRepository(context, fileRepository, transferDao, transferItemDao);
  }
}
