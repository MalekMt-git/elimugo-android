// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.viewmodel;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.data.SelectionRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SharingSelectionViewModel_Factory implements Factory<SharingSelectionViewModel> {
  private final Provider<Context> contextProvider;

  private final Provider<SelectionRepository> selectionRepositoryProvider;

  public SharingSelectionViewModel_Factory(Provider<Context> contextProvider,
      Provider<SelectionRepository> selectionRepositoryProvider) {
    this.contextProvider = contextProvider;
    this.selectionRepositoryProvider = selectionRepositoryProvider;
  }

  @Override
  public SharingSelectionViewModel get() {
    return newInstance(contextProvider.get(), selectionRepositoryProvider.get());
  }

  public static SharingSelectionViewModel_Factory create(Provider<Context> contextProvider,
      Provider<SelectionRepository> selectionRepositoryProvider) {
    return new SharingSelectionViewModel_Factory(contextProvider, selectionRepositoryProvider);
  }

  public static SharingSelectionViewModel newInstance(Context context,
      SelectionRepository selectionRepository) {
    return new SharingSelectionViewModel(context, selectionRepository);
  }
}
