// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.fragment;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.backend.Backend;
import org.monora.uprotocol.core.persistence.PersistenceProvider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkManagerFragment_MembersInjector implements MembersInjector<NetworkManagerFragment> {
  private final Provider<Backend> backendProvider;

  private final Provider<PersistenceProvider> persistenceProvider;

  public NetworkManagerFragment_MembersInjector(Provider<Backend> backendProvider,
      Provider<PersistenceProvider> persistenceProvider) {
    this.backendProvider = backendProvider;
    this.persistenceProvider = persistenceProvider;
  }

  public static MembersInjector<NetworkManagerFragment> create(Provider<Backend> backendProvider,
      Provider<PersistenceProvider> persistenceProvider) {
    return new NetworkManagerFragment_MembersInjector(backendProvider, persistenceProvider);
  }

  @Override
  public void injectMembers(NetworkManagerFragment instance) {
    injectBackend(instance, backendProvider.get());
    injectPersistenceProvider(instance, persistenceProvider.get());
  }

  @InjectedFieldSignature("org.monora.uprotocol.client.android.fragment.NetworkManagerFragment.backend")
  public static void injectBackend(NetworkManagerFragment instance, Backend backend) {
    instance.backend = backend;
  }

  @InjectedFieldSignature("org.monora.uprotocol.client.android.fragment.NetworkManagerFragment.persistenceProvider")
  public static void injectPersistenceProvider(NetworkManagerFragment instance,
      PersistenceProvider persistenceProvider) {
    instance.persistenceProvider = persistenceProvider;
  }
}
