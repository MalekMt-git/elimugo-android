// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.viewmodel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.backend.TransportRegistry;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ClientPickerViewModel_Factory implements Factory<ClientPickerViewModel> {
  private final Provider<TransportRegistry> transportRegistryProvider;

  public ClientPickerViewModel_Factory(Provider<TransportRegistry> transportRegistryProvider) {
    this.transportRegistryProvider = transportRegistryProvider;
  }

  @Override
  public ClientPickerViewModel get() {
    return newInstance(transportRegistryProvider.get());
  }

  public static ClientPickerViewModel_Factory create(
      Provider<TransportRegistry> transportRegistryProvider) {
    return new ClientPickerViewModel_Factory(transportRegistryProvider);
  }

  public static ClientPickerViewModel newInstance(TransportRegistry transportRegistry) {
    return new ClientPickerViewModel(transportRegistry);
  }
}
