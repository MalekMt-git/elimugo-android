// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.data;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.client.android.backend.Backend;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TaskRepository_Factory implements Factory<TaskRepository> {
  private final Provider<Context> contextProvider;

  private final Provider<Backend> backendProvider;

  public TaskRepository_Factory(Provider<Context> contextProvider,
      Provider<Backend> backendProvider) {
    this.contextProvider = contextProvider;
    this.backendProvider = backendProvider;
  }

  @Override
  public TaskRepository get() {
    return newInstance(contextProvider.get(), backendProvider.get());
  }

  public static TaskRepository_Factory create(Provider<Context> contextProvider,
      Provider<Backend> backendProvider) {
    return new TaskRepository_Factory(contextProvider, backendProvider);
  }

  public static TaskRepository newInstance(Context context, Backend backend) {
    return new TaskRepository(context, backend);
  }
}
