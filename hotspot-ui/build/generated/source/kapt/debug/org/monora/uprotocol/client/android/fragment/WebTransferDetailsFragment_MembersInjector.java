// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.fragment;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WebTransferDetailsFragment_MembersInjector implements MembersInjector<WebTransferDetailsFragment> {
  private final Provider<WebTransferDetailsViewModel.Factory> factoryProvider;

  public WebTransferDetailsFragment_MembersInjector(
      Provider<WebTransferDetailsViewModel.Factory> factoryProvider) {
    this.factoryProvider = factoryProvider;
  }

  public static MembersInjector<WebTransferDetailsFragment> create(
      Provider<WebTransferDetailsViewModel.Factory> factoryProvider) {
    return new WebTransferDetailsFragment_MembersInjector(factoryProvider);
  }

  @Override
  public void injectMembers(WebTransferDetailsFragment instance) {
    injectFactory(instance, factoryProvider.get());
  }

  @InjectedFieldSignature("org.monora.uprotocol.client.android.fragment.WebTransferDetailsFragment.factory")
  public static void injectFactory(WebTransferDetailsFragment instance,
      WebTransferDetailsViewModel.Factory factory) {
    instance.factory = factory;
  }
}
