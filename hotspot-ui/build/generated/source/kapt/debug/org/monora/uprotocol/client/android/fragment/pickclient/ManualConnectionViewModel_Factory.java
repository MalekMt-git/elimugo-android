// Generated by Dagger (https://dagger.dev).
package org.monora.uprotocol.client.android.fragment.pickclient;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.monora.uprotocol.core.persistence.PersistenceProvider;
import org.monora.uprotocol.core.protocol.ConnectionFactory;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ManualConnectionViewModel_Factory implements Factory<ManualConnectionViewModel> {
  private final Provider<ConnectionFactory> connectionFactoryProvider;

  private final Provider<PersistenceProvider> persistenceProvider;

  public ManualConnectionViewModel_Factory(Provider<ConnectionFactory> connectionFactoryProvider,
      Provider<PersistenceProvider> persistenceProvider) {
    this.connectionFactoryProvider = connectionFactoryProvider;
    this.persistenceProvider = persistenceProvider;
  }

  @Override
  public ManualConnectionViewModel get() {
    return newInstance(connectionFactoryProvider.get(), persistenceProvider.get());
  }

  public static ManualConnectionViewModel_Factory create(
      Provider<ConnectionFactory> connectionFactoryProvider,
      Provider<PersistenceProvider> persistenceProvider) {
    return new ManualConnectionViewModel_Factory(connectionFactoryProvider, persistenceProvider);
  }

  public static ManualConnectionViewModel newInstance(ConnectionFactory connectionFactory,
      PersistenceProvider persistenceProvider) {
    return new ManualConnectionViewModel(connectionFactory, persistenceProvider);
  }
}
