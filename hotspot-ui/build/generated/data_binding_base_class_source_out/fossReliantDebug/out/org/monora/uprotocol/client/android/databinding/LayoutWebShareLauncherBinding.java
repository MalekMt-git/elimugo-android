// Generated by data binding compiler. Do not edit!
package org.monora.uprotocol.client.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import java.lang.Deprecated;
import java.lang.Object;
import org.monora.uprotocol.client.android.R;
import org.monora.uprotocol.client.android.fragment.content.transfer.WebShareViewModel;

public abstract class LayoutWebShareLauncherBinding extends ViewDataBinding {
  @NonNull
  public final Barrier detailsBottomBarrier;

  @NonNull
  public final View divider;

  @NonNull
  public final LayoutEmptyContentBinding emptyView;

  @NonNull
  public final ImageView image;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView subtitle;

  @NonNull
  public final TextView title;

  @Bindable
  protected WebShareViewModel mViewModel;

  protected LayoutWebShareLauncherBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Barrier detailsBottomBarrier, View divider,
      LayoutEmptyContentBinding emptyView, ImageView image, RecyclerView recyclerView,
      TextView subtitle, TextView title) {
    super(_bindingComponent, _root, _localFieldCount);
    this.detailsBottomBarrier = detailsBottomBarrier;
    this.divider = divider;
    this.emptyView = emptyView;
    this.image = image;
    this.recyclerView = recyclerView;
    this.subtitle = subtitle;
    this.title = title;
  }

  public abstract void setViewModel(@Nullable WebShareViewModel viewModel);

  @Nullable
  public WebShareViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static LayoutWebShareLauncherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_web_share_launcher, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutWebShareLauncherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutWebShareLauncherBinding>inflateInternal(inflater, R.layout.layout_web_share_launcher, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutWebShareLauncherBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_web_share_launcher, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutWebShareLauncherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutWebShareLauncherBinding>inflateInternal(inflater, R.layout.layout_web_share_launcher, null, false, component);
  }

  public static LayoutWebShareLauncherBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutWebShareLauncherBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutWebShareLauncherBinding)bind(component, view, R.layout.layout_web_share_launcher);
  }
}
