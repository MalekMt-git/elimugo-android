// Generated by data binding compiler. Do not edit!
package org.monora.uprotocol.client.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.Group;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.Deprecated;
import java.lang.Object;
import org.monora.uprotocol.client.android.R;
import org.monora.uprotocol.client.android.viewmodel.content.TransferDetailContentViewModel;
import org.monora.uprotocol.client.android.viewmodel.content.TransferStateFeederViewModel;

public abstract class ListTransferBinding extends ViewDataBinding {
  @NonNull
  public final Button acceptButton;

  @NonNull
  public final Barrier barrierBottom;

  @NonNull
  public final Barrier barrierTop;

  @NonNull
  public final MaterialCardView container;

  @NonNull
  public final Group group;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final CircularProgressIndicator progressBar;

  @NonNull
  public final Button rejectButton;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView text2;

  @NonNull
  public final ImageView toggleButton;

  @NonNull
  public final TextView waitingApprovalText;

  @Bindable
  protected TransferStateFeederViewModel mFeederModel;

  @Bindable
  protected TransferDetailContentViewModel mViewModel;

  protected ListTransferBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button acceptButton, Barrier barrierBottom, Barrier barrierTop, MaterialCardView container,
      Group group, ImageView imageView5, CircularProgressIndicator progressBar, Button rejectButton,
      TextView text, TextView text1, TextView text2, ImageView toggleButton,
      TextView waitingApprovalText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.acceptButton = acceptButton;
    this.barrierBottom = barrierBottom;
    this.barrierTop = barrierTop;
    this.container = container;
    this.group = group;
    this.imageView5 = imageView5;
    this.progressBar = progressBar;
    this.rejectButton = rejectButton;
    this.text = text;
    this.text1 = text1;
    this.text2 = text2;
    this.toggleButton = toggleButton;
    this.waitingApprovalText = waitingApprovalText;
  }

  public abstract void setFeederModel(@Nullable TransferStateFeederViewModel feederModel);

  @Nullable
  public TransferStateFeederViewModel getFeederModel() {
    return mFeederModel;
  }

  public abstract void setViewModel(@Nullable TransferDetailContentViewModel viewModel);

  @Nullable
  public TransferDetailContentViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ListTransferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_transfer, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ListTransferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ListTransferBinding>inflateInternal(inflater, R.layout.list_transfer, root, attachToRoot, component);
  }

  @NonNull
  public static ListTransferBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_transfer, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ListTransferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ListTransferBinding>inflateInternal(inflater, R.layout.list_transfer, null, false, component);
  }

  public static ListTransferBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ListTransferBinding bind(@NonNull View view, @Nullable Object component) {
    return (ListTransferBinding)bind(component, view, R.layout.list_transfer);
  }
}
