// Generated by data binding compiler. Do not edit!
package org.monora.uprotocol.client.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.ContentLoadingProgressBar;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.Deprecated;
import java.lang.Object;
import org.monora.uprotocol.client.android.R;
import org.monora.uprotocol.client.android.viewmodel.content.SenderClientContentViewModel;

public abstract class LayoutReceiveBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton button;

  @NonNull
  public final ImageView changeStorageButton;

  @NonNull
  public final ImageView image;

  @NonNull
  public final ContentLoadingProgressBar progressBar;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final MaterialCardView storageFolderContainer;

  @NonNull
  public final TextView storageFolderNotice;

  @NonNull
  public final TextView storageFolderText;

  @NonNull
  public final TextView text;

  @NonNull
  public final ImageView warningIcon;

  @NonNull
  public final MaterialButton webShareButton;

  @Bindable
  protected SenderClientContentViewModel mViewModel;

  protected LayoutReceiveBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialButton button, ImageView changeStorageButton, ImageView image,
      ContentLoadingProgressBar progressBar, TextView statusText,
      MaterialCardView storageFolderContainer, TextView storageFolderNotice,
      TextView storageFolderText, TextView text, ImageView warningIcon,
      MaterialButton webShareButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.button = button;
    this.changeStorageButton = changeStorageButton;
    this.image = image;
    this.progressBar = progressBar;
    this.statusText = statusText;
    this.storageFolderContainer = storageFolderContainer;
    this.storageFolderNotice = storageFolderNotice;
    this.storageFolderText = storageFolderText;
    this.text = text;
    this.warningIcon = warningIcon;
    this.webShareButton = webShareButton;
  }

  public abstract void setViewModel(@Nullable SenderClientContentViewModel viewModel);

  @Nullable
  public SenderClientContentViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static LayoutReceiveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_receive, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutReceiveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutReceiveBinding>inflateInternal(inflater, R.layout.layout_receive, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutReceiveBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_receive, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutReceiveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutReceiveBinding>inflateInternal(inflater, R.layout.layout_receive, null, false, component);
  }

  public static LayoutReceiveBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutReceiveBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutReceiveBinding)bind(component, view, R.layout.layout_receive);
  }
}
